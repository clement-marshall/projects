# Python function that simulates rolling dice many times. See how many times each outcome occurs. Do a million simulations
# Function should accept a variable number of sides of dice, and variable number of dice
# Output is the probability of each possible outcome (each outcome is the sum of the dice)
# Example: roll_dice(4, 6, 6) simulates rolling one 4 sided die, and two 6 sided dice


#Perform the simulation for one die only. Only input variable is the number of sides of the die.
"""
import random
import collections

def roll_dice(sides_number):
    sim_number = 0
    random_number = 0
    outcomes_dict = {}
    numb_to_divide_by = 0
    while sim_number < 1000000:
        random_number = random.randint(1, sides_number)
        if random_number not in outcomes_dict:
            outcomes_dict[random_number] = 1
        else:
            outcomes_dict[random_number] += 1
        sim_number += 1
  
    for x in outcomes_dict.values():
        numb_to_divide_by += x
        
    ordered_list = collections.OrderedDict(sorted(outcomes_dict.items()))
    
    for a, b in ordered_list.items():
        print(str(a) + ": " + str((100 * b/numb_to_divide_by)) + "%")
"""


#Perform the simulation for 3 dice, and the value of sides can be 0. also takes total number of sims as an input

"""
import random
import collections

def roll_dice(sides_number1, sides_number2, sides_number3, total_sims):
    sim_number = 0
    random_number = 0
    outcomes_dict = {}
    numb_to_divide_by = 0
    while sim_number < total_sims:
        random_number = random.randint(1, sides_number1) + random.randint(1, sides_number2) + random.randint(1, sides_number3)
        if random_number not in outcomes_dict:
            outcomes_dict[random_number] = 1
        else:
            outcomes_dict[random_number] += 1
        sim_number += 1
  
    for x in outcomes_dict.values():
        numb_to_divide_by += x
        
    ordered_list = collections.OrderedDict(sorted(outcomes_dict.items()))
    
    for a, b in ordered_list.items():
        print(str(a) + ": " + str((100 * b/numb_to_divide_by)) + "%")

"""

#Do the simulation a million times for a variable number of inputs
"""
import random
import collections

def roll_dice(*sides_number):
    sim_number = 0
    random_number = 0
    outcomes_dict = {}
    numb_to_divide_by = 0
    while sim_number < 1000000:
        random_number = 0
        for x in sides_number:
            random_number += random.randint(1, x)
        if random_number not in outcomes_dict:
            outcomes_dict[random_number] = 1
        else:
            outcomes_dict[random_number] += 1
        sim_number += 1
  
    for x in outcomes_dict.values():
        numb_to_divide_by += x
        
    ordered_list = collections.OrderedDict(sorted(outcomes_dict.items()))
    
    for a, b in ordered_list.items():
        print(str(a) + ": " + str((100 * b/numb_to_divide_by)) + "%")
"""


#Ask the user for the number of simulations, and receives a varibale number of inputs

import random
import collections

def roll_dice(*sides_number):
    sim_number = 0
    random_number = 0
    outcomes_dict = {}
    numb_to_divide_by = 0
    number_of_dice = 0
    list_of_dice_number = []
    number_to_append = 0
    
    print("This is a dice rolling simulator.") 
    print("First it will ask you how many dice you have. Then it will ask for the number of sides of each die.") 
    print("Then it will ask how many total simulations you want to perform.") 
    print("Finally it will return a list of dice outcomes with the probability of each.")
    print("Ready to begin?\n")
    
    number_of_dice = int(input("How many dice?"))
    
    
    for x in range(1, number_of_dice+1):
        number_to_append = input("Number of sides for die number " + str(x) + ":")
        list_of_dice_number.append(int(number_to_append))
    
    total_sims = int(input("Total number of simulations?"))
    
    print("\nYour dice: " + str(list_of_dice_number))
    
    print("Calculating...\n")
    
    while sim_number < total_sims:
        random_number = 0
        for x in list_of_dice_number:
            random_number += random.randint(1, x)
        if random_number not in outcomes_dict:
            outcomes_dict[random_number] = 1
        else:
            outcomes_dict[random_number] += 1
        sim_number += 1
  
    for x in outcomes_dict.values():
        numb_to_divide_by += x
        
    ordered_list = collections.OrderedDict(sorted(outcomes_dict.items()))
    
    for a, b in ordered_list.items():
        print(str(a) + ": " + str((100 * b/numb_to_divide_by)) + "%")

roll_dice()

